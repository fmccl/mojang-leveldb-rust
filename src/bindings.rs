#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(dead_code)]
/* automatically generated by rust-bindgen 0.69.4 */

pub const _VCRT_COMPILER_PREPROCESSOR: u32 = 1;
pub const _SAL_VERSION: u32 = 20;
pub const __SAL_H_VERSION: u32 = 180000000;
pub const _USE_DECLSPECS_FOR_SAL: u32 = 0;
pub const _USE_ATTRIBUTES_FOR_SAL: u32 = 0;
pub const _CRT_PACKING: u32 = 8;
pub const _HAS_EXCEPTIONS: u32 = 1;
pub const _STL_LANG: u32 = 0;
pub const _HAS_CXX17: u32 = 0;
pub const _HAS_CXX20: u32 = 0;
pub const _HAS_CXX23: u32 = 0;
pub const _HAS_NODISCARD: u32 = 0;
pub const WCHAR_MIN: u32 = 0;
pub const WCHAR_MAX: u32 = 65535;
pub const WINT_MIN: u32 = 0;
pub const WINT_MAX: u32 = 65535;
pub type __gnuc_va_list = __builtin_va_list;
pub type va_list = __builtin_va_list;
pub type wchar_t = ::std::os::raw::c_ushort;
pub type max_align_t = f64;
extern "C" {
    pub fn __va_start(arg1: *mut *mut ::std::os::raw::c_char, ...);
}
pub type __vcrt_bool = bool;
extern "C" {
    pub fn __security_init_cookie();
}
extern "C" {
    pub fn __security_check_cookie(_StackCookie: usize);
}
extern "C" {
    pub fn __report_gsfailure(_StackCookie: usize) -> !;
}
extern "C" {
    pub static mut __security_cookie: usize;
}
pub type int_least8_t = ::std::os::raw::c_schar;
pub type int_least16_t = ::std::os::raw::c_short;
pub type int_least32_t = ::std::os::raw::c_int;
pub type int_least64_t = ::std::os::raw::c_longlong;
pub type uint_least8_t = ::std::os::raw::c_uchar;
pub type uint_least16_t = ::std::os::raw::c_ushort;
pub type uint_least32_t = ::std::os::raw::c_uint;
pub type uint_least64_t = ::std::os::raw::c_ulonglong;
pub type int_fast8_t = ::std::os::raw::c_schar;
pub type int_fast16_t = ::std::os::raw::c_int;
pub type int_fast32_t = ::std::os::raw::c_int;
pub type int_fast64_t = ::std::os::raw::c_longlong;
pub type uint_fast8_t = ::std::os::raw::c_uchar;
pub type uint_fast16_t = ::std::os::raw::c_uint;
pub type uint_fast32_t = ::std::os::raw::c_uint;
pub type uint_fast64_t = ::std::os::raw::c_ulonglong;
pub type intmax_t = ::std::os::raw::c_longlong;
pub type uintmax_t = ::std::os::raw::c_ulonglong;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_cache_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_comparator_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_env_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_filelock_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_filterpolicy_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_iterator_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_logger_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_options_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_randomfile_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_readoptions_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_seqfile_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_snapshot_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_writablefile_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_writebatch_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_writeoptions_t {
    _unused: [u8; 0],
}
extern "C" {
    pub fn leveldb_open(
        options: *const leveldb_options_t,
        name: *const ::std::os::raw::c_char,
        errptr: *mut *mut ::std::os::raw::c_char,
    ) -> *mut leveldb_t;
}
extern "C" {
    pub fn leveldb_close(db: *mut leveldb_t);
}
extern "C" {
    pub fn leveldb_put(
        db: *mut leveldb_t,
        options: *const leveldb_writeoptions_t,
        key: *const ::std::os::raw::c_char,
        keylen: usize,
        val: *const ::std::os::raw::c_char,
        vallen: usize,
        errptr: *mut *mut ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn leveldb_delete(
        db: *mut leveldb_t,
        options: *const leveldb_writeoptions_t,
        key: *const ::std::os::raw::c_char,
        keylen: usize,
        errptr: *mut *mut ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn leveldb_write(
        db: *mut leveldb_t,
        options: *const leveldb_writeoptions_t,
        batch: *mut leveldb_writebatch_t,
        errptr: *mut *mut ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn leveldb_get(
        db: *mut leveldb_t,
        options: *const leveldb_readoptions_t,
        key: *const ::std::os::raw::c_char,
        keylen: usize,
        vallen: *mut usize,
        errptr: *mut *mut ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn leveldb_create_iterator(
        db: *mut leveldb_t,
        options: *const leveldb_readoptions_t,
    ) -> *mut leveldb_iterator_t;
}
extern "C" {
    pub fn leveldb_create_snapshot(db: *mut leveldb_t) -> *const leveldb_snapshot_t;
}
extern "C" {
    pub fn leveldb_release_snapshot(db: *mut leveldb_t, snapshot: *const leveldb_snapshot_t);
}
extern "C" {
    pub fn leveldb_property_value(
        db: *mut leveldb_t,
        propname: *const ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn leveldb_approximate_sizes(
        db: *mut leveldb_t,
        num_ranges: ::std::os::raw::c_int,
        range_start_key: *const *const ::std::os::raw::c_char,
        range_start_key_len: *const usize,
        range_limit_key: *const *const ::std::os::raw::c_char,
        range_limit_key_len: *const usize,
        sizes: *mut u64,
    );
}
extern "C" {
    pub fn leveldb_compact_range(
        db: *mut leveldb_t,
        start_key: *const ::std::os::raw::c_char,
        start_key_len: usize,
        limit_key: *const ::std::os::raw::c_char,
        limit_key_len: usize,
    );
}
extern "C" {
    pub fn leveldb_destroy_db(
        options: *const leveldb_options_t,
        name: *const ::std::os::raw::c_char,
        errptr: *mut *mut ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn leveldb_repair_db(
        options: *const leveldb_options_t,
        name: *const ::std::os::raw::c_char,
        errptr: *mut *mut ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn leveldb_iter_destroy(arg1: *mut leveldb_iterator_t);
}
extern "C" {
    pub fn leveldb_iter_valid(arg1: *const leveldb_iterator_t) -> u8;
}
extern "C" {
    pub fn leveldb_iter_seek_to_first(arg1: *mut leveldb_iterator_t);
}
extern "C" {
    pub fn leveldb_iter_seek_to_last(arg1: *mut leveldb_iterator_t);
}
extern "C" {
    pub fn leveldb_iter_seek(
        arg1: *mut leveldb_iterator_t,
        k: *const ::std::os::raw::c_char,
        klen: usize,
    );
}
extern "C" {
    pub fn leveldb_iter_next(arg1: *mut leveldb_iterator_t);
}
extern "C" {
    pub fn leveldb_iter_prev(arg1: *mut leveldb_iterator_t);
}
extern "C" {
    pub fn leveldb_iter_key(
        arg1: *const leveldb_iterator_t,
        klen: *mut usize,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn leveldb_iter_value(
        arg1: *const leveldb_iterator_t,
        vlen: *mut usize,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn leveldb_iter_get_error(
        arg1: *const leveldb_iterator_t,
        errptr: *mut *mut ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn leveldb_writebatch_create() -> *mut leveldb_writebatch_t;
}
extern "C" {
    pub fn leveldb_writebatch_destroy(arg1: *mut leveldb_writebatch_t);
}
extern "C" {
    pub fn leveldb_writebatch_clear(arg1: *mut leveldb_writebatch_t);
}
extern "C" {
    pub fn leveldb_writebatch_put(
        arg1: *mut leveldb_writebatch_t,
        key: *const ::std::os::raw::c_char,
        klen: usize,
        val: *const ::std::os::raw::c_char,
        vlen: usize,
    );
}
extern "C" {
    pub fn leveldb_writebatch_delete(
        arg1: *mut leveldb_writebatch_t,
        key: *const ::std::os::raw::c_char,
        klen: usize,
    );
}
extern "C" {
    pub fn leveldb_writebatch_iterate(
        arg1: *const leveldb_writebatch_t,
        state: *mut ::std::os::raw::c_void,
        put: ::std::option::Option<
            unsafe extern "C" fn(
                arg1: *mut ::std::os::raw::c_void,
                k: *const ::std::os::raw::c_char,
                klen: usize,
                v: *const ::std::os::raw::c_char,
                vlen: usize,
            ),
        >,
        deleted: ::std::option::Option<
            unsafe extern "C" fn(
                arg1: *mut ::std::os::raw::c_void,
                k: *const ::std::os::raw::c_char,
                klen: usize,
            ),
        >,
    );
}
extern "C" {
    pub fn leveldb_writebatch_append(
        destination: *mut leveldb_writebatch_t,
        source: *const leveldb_writebatch_t,
    );
}
extern "C" {
    pub fn leveldb_options_create() -> *mut leveldb_options_t;
}
extern "C" {
    pub fn leveldb_options_destroy(arg1: *mut leveldb_options_t);
}
extern "C" {
    pub fn leveldb_options_set_comparator(
        arg1: *mut leveldb_options_t,
        arg2: *mut leveldb_comparator_t,
    );
}
extern "C" {
    pub fn leveldb_options_set_filter_policy(
        arg1: *mut leveldb_options_t,
        arg2: *mut leveldb_filterpolicy_t,
    );
}
extern "C" {
    pub fn leveldb_options_set_create_if_missing(arg1: *mut leveldb_options_t, arg2: u8);
}
extern "C" {
    pub fn leveldb_options_set_error_if_exists(arg1: *mut leveldb_options_t, arg2: u8);
}
extern "C" {
    pub fn leveldb_options_set_paranoid_checks(arg1: *mut leveldb_options_t, arg2: u8);
}
extern "C" {
    pub fn leveldb_options_set_env(arg1: *mut leveldb_options_t, arg2: *mut leveldb_env_t);
}
extern "C" {
    pub fn leveldb_options_set_info_log(arg1: *mut leveldb_options_t, arg2: *mut leveldb_logger_t);
}
extern "C" {
    pub fn leveldb_options_set_write_buffer_size(arg1: *mut leveldb_options_t, arg2: usize);
}
extern "C" {
    pub fn leveldb_options_set_max_open_files(
        arg1: *mut leveldb_options_t,
        arg2: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn leveldb_options_set_cache(arg1: *mut leveldb_options_t, arg2: *mut leveldb_cache_t);
}
extern "C" {
    pub fn leveldb_options_set_block_size(arg1: *mut leveldb_options_t, arg2: usize);
}
extern "C" {
    pub fn leveldb_options_set_block_restart_interval(
        arg1: *mut leveldb_options_t,
        arg2: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn leveldb_options_set_max_file_size(arg1: *mut leveldb_options_t, arg2: usize);
}
pub const leveldb_no_compression: _bindgen_ty_1 = 0;
pub const leveldb_snappy_compression: _bindgen_ty_1 = 1;
pub const leveldb_zstd_compression: _bindgen_ty_1 = 2;
pub const leveldb_zlib_compression: _bindgen_ty_1 = 4;
pub type _bindgen_ty_1 = ::std::os::raw::c_int;
extern "C" {
    pub fn leveldb_options_set_compression(
        arg1: *mut leveldb_options_t,
        arg2: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn leveldb_comparator_create(
        state: *mut ::std::os::raw::c_void,
        destructor: ::std::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void)>,
        compare: ::std::option::Option<
            unsafe extern "C" fn(
                arg1: *mut ::std::os::raw::c_void,
                a: *const ::std::os::raw::c_char,
                alen: usize,
                b: *const ::std::os::raw::c_char,
                blen: usize,
            ) -> ::std::os::raw::c_int,
        >,
        name: ::std::option::Option<
            unsafe extern "C" fn(
                arg1: *mut ::std::os::raw::c_void,
            ) -> *const ::std::os::raw::c_char,
        >,
    ) -> *mut leveldb_comparator_t;
}
extern "C" {
    pub fn leveldb_comparator_destroy(arg1: *mut leveldb_comparator_t);
}
extern "C" {
    pub fn leveldb_filterpolicy_create(
        state: *mut ::std::os::raw::c_void,
        destructor: ::std::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void)>,
        create_filter: ::std::option::Option<
            unsafe extern "C" fn(
                arg1: *mut ::std::os::raw::c_void,
                key_array: *const *const ::std::os::raw::c_char,
                key_length_array: *const usize,
                num_keys: ::std::os::raw::c_int,
                filter_length: *mut usize,
            ) -> *mut ::std::os::raw::c_char,
        >,
        key_may_match: ::std::option::Option<
            unsafe extern "C" fn(
                arg1: *mut ::std::os::raw::c_void,
                key: *const ::std::os::raw::c_char,
                length: usize,
                filter: *const ::std::os::raw::c_char,
                filter_length: usize,
            ) -> u8,
        >,
        name: ::std::option::Option<
            unsafe extern "C" fn(
                arg1: *mut ::std::os::raw::c_void,
            ) -> *const ::std::os::raw::c_char,
        >,
    ) -> *mut leveldb_filterpolicy_t;
}
extern "C" {
    pub fn leveldb_filterpolicy_destroy(arg1: *mut leveldb_filterpolicy_t);
}
extern "C" {
    pub fn leveldb_filterpolicy_create_bloom(
        bits_per_key: ::std::os::raw::c_int,
    ) -> *mut leveldb_filterpolicy_t;
}
extern "C" {
    pub fn leveldb_readoptions_create() -> *mut leveldb_readoptions_t;
}
extern "C" {
    pub fn leveldb_readoptions_destroy(arg1: *mut leveldb_readoptions_t);
}
extern "C" {
    pub fn leveldb_readoptions_set_verify_checksums(arg1: *mut leveldb_readoptions_t, arg2: u8);
}
extern "C" {
    pub fn leveldb_readoptions_set_fill_cache(arg1: *mut leveldb_readoptions_t, arg2: u8);
}
extern "C" {
    pub fn leveldb_readoptions_set_snapshot(
        arg1: *mut leveldb_readoptions_t,
        arg2: *const leveldb_snapshot_t,
    );
}
extern "C" {
    pub fn leveldb_writeoptions_create() -> *mut leveldb_writeoptions_t;
}
extern "C" {
    pub fn leveldb_writeoptions_destroy(arg1: *mut leveldb_writeoptions_t);
}
extern "C" {
    pub fn leveldb_writeoptions_set_sync(arg1: *mut leveldb_writeoptions_t, arg2: u8);
}
extern "C" {
    pub fn leveldb_cache_create_lru(capacity: usize) -> *mut leveldb_cache_t;
}
extern "C" {
    pub fn leveldb_cache_destroy(cache: *mut leveldb_cache_t);
}
extern "C" {
    pub fn leveldb_create_default_env() -> *mut leveldb_env_t;
}
extern "C" {
    pub fn leveldb_env_destroy(arg1: *mut leveldb_env_t);
}
extern "C" {
    pub fn leveldb_env_get_test_directory(arg1: *mut leveldb_env_t) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn leveldb_free(ptr: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn leveldb_major_version() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn leveldb_minor_version() -> ::std::os::raw::c_int;
}
pub type __builtin_va_list = *mut ::std::os::raw::c_char;

